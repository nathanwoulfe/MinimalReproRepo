{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app_plugins/minimalreprorepopackage/backoffice/app.js","app_plugins/minimalreprorepopackage/backoffice/component.js","app_plugins/minimalreprorepopackage/backoffice/module.js"],"names":[],"mappings":"AAAA;;;ACAC;;AAED,OAAO,CAAC,MAAR,CAAe,MAAf,EAAuB,CACnB,wBADmB,CAAvB;AAIA,OAAO,CAAC,MAAR,CAAe,SAAf,EAA0B,QAA1B,CAAmC,IAAnC,CAAwC,MAAxC;;;;;;;;;;;;ACNC,MAAM,QAAN,CAAe;AACZ,EAAA,WAAW,GAAG;AAAA,wCAWD,MAAM;AACf,UAAI,KAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,KAA/B,EAAsC;AAClC,aAAK,IAAL,GAAY,KAAK,YAAjB;AACA,aAAK,OAAL,GAAe,KAAK,OAAL,CAAa,MAAb,CAAoB,CAApB,EAAuB,KAAK,KAA5B,CAAf;AACH,OAHD,MAGO;AACH,aAAK,IAAL,GAAY,KAAK,YAAL,CAAkB,OAAlB,CAA0B,KAA1B,EAAiC,KAAK,KAAL,GAAa,KAAK,OAAL,CAAa,MAA3D,CAAZ;AACH;AACJ,KAlBa;;AACV,SAAK,KAAL,GAAa,GAAb;AAEA,SAAK,YAAL,GAAqB,eAAc,KAAK,KAAM,EAA9C;AACA,SAAK,YAAL,GAAoB,2BAApB;AACA,SAAK,SAAL,GAAiB,SAAjB;AAEA,IAAA,OAAO,CAAC,GAAR,CAAa,+BAAb;AACA;AACH;;AAVW;;AAsBhB,IAAM,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAfA;AAiBO,IAAM,iBAAiB,GAAG;AAC7B,EAAA,IAAI,EAAE,cADuB;AAE7B,EAAA,UAAU,EAAE,IAFiB;AAG7B,EAAA,QAAQ,EAAE;AACN,IAAA,OAAO,EAAE;AADH,GAHmB;AAM7B,EAAA,QAAQ,EAAE,QANmB;AAO7B,EAAA,UAAU,EAAE;AAPiB,CAA1B;;;;;;;;;;;ACvCN;;AAEM,IAAM,gBAAgB,GAAG,OAAO,CAClC,MAD2B,CACpB,iBADoB,EACD,EADC,EAE3B,SAF2B,CAEjB,6BAAkB,IAFD,EAEO,4BAFP,EAE0B,IAFnD","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","﻿import { ComponentsModule } from './module.js';\r\n\r\nangular.module('demo', [\r\n    ComponentsModule\r\n]);\r\n\r\nangular.module('umbraco').requires.push('demo');","﻿class Comments {\r\n    constructor() {\r\n        this.limit = 250;\r\n\r\n        this.maxLengthStr = `max length: ${this.limit}`;\r\n        this.remainingStr = 'remaining characters: %0%';\r\n        this.labelText = 'Comment';\r\n\r\n        console.log(`I'm the ctor in the component`);\r\n        debugger;\r\n    }\r\n\r\n    limitChars = () => {\r\n        if (this.comment.length > this.limit) {\r\n            this.info = this.maxLengthStr;\r\n            this.comment = this.comment.substr(0, this.limit);\r\n        } else {\r\n            this.info = this.remainingStr.replace('%0%', this.limit - this.comment.length);\r\n        }\r\n    };\r\n}\r\n\r\nconst template = `\r\n    <div class=\"umb-el-wrap\">\r\n        <label class=\"control-label\">\r\n            {{ $ctrl.labelText }}\r\n            <small ng-bind=\"$ctrl.info\"></small>\r\n        </label>\r\n        <div class=\"controls\">\r\n            <textarea \r\n                ng-model=\"$ctrl.comment\" \r\n                ng-change=\"$ctrl.limitChars()\"\r\n                no-dirty-check\r\n                umb-auto-focus\r\n                rows=\"5\"                     \r\n                class=\"umb-property-editor umb-textarea\"></textarea>\r\n        </div>\r\n    </div>`;\r\n\r\nexport const CommentsComponent = {\r\n    name: 'demoComments',\r\n    transclude: true,\r\n    bindings: {\r\n        comment: '=',\r\n    },\r\n    template: template,\r\n    controller: Comments\r\n};","﻿import { CommentsComponent } from './component.js';\r\n\r\nexport const ComponentsModule = angular\r\n    .module('demo.components', [])\r\n    .component(CommentsComponent.name, CommentsComponent).name;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHBfcGx1Z2lucy9taW5pbWFscmVwcm9yZXBvcGFja2FnZS9iYWNrb2ZmaWNlL2FwcC5qcyIsImFwcF9wbHVnaW5zL21pbmltYWxyZXByb3JlcG9wYWNrYWdlL2JhY2tvZmZpY2UvY29tcG9uZW50LmpzIiwiYXBwX3BsdWdpbnMvbWluaW1hbHJlcHJvcmVwb3BhY2thZ2UvYmFja29mZmljZS9tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FDOztBQUVELE9BQU8sQ0FBQyxNQUFSLENBQWUsTUFBZixFQUF1QixDQUNuQix3QkFEbUIsQ0FBdkI7QUFJQSxPQUFPLENBQUMsTUFBUixDQUFlLFNBQWYsRUFBMEIsUUFBMUIsQ0FBbUMsSUFBbkMsQ0FBd0MsTUFBeEM7Ozs7Ozs7Ozs7OztBQ05DLE1BQU0sUUFBTixDQUFlO0FBQ1osRUFBQSxXQUFXLEdBQUc7QUFBQSx3Q0FXRCxNQUFNO0FBQ2YsVUFBSSxLQUFLLE9BQUwsQ0FBYSxNQUFiLEdBQXNCLEtBQUssS0FBL0IsRUFBc0M7QUFDbEMsYUFBSyxJQUFMLEdBQVksS0FBSyxZQUFqQjtBQUNBLGFBQUssT0FBTCxHQUFlLEtBQUssT0FBTCxDQUFhLE1BQWIsQ0FBb0IsQ0FBcEIsRUFBdUIsS0FBSyxLQUE1QixDQUFmO0FBQ0gsT0FIRCxNQUdPO0FBQ0gsYUFBSyxJQUFMLEdBQVksS0FBSyxZQUFMLENBQWtCLE9BQWxCLENBQTBCLEtBQTFCLEVBQWlDLEtBQUssS0FBTCxHQUFhLEtBQUssT0FBTCxDQUFhLE1BQTNELENBQVo7QUFDSDtBQUNKLEtBbEJhOztBQUNWLFNBQUssS0FBTCxHQUFhLEdBQWI7QUFFQSxTQUFLLFlBQUwsR0FBcUIsZUFBYyxLQUFLLEtBQU0sRUFBOUM7QUFDQSxTQUFLLFlBQUwsR0FBb0IsMkJBQXBCO0FBQ0EsU0FBSyxTQUFMLEdBQWlCLFNBQWpCO0FBRUEsSUFBQSxPQUFPLENBQUMsR0FBUixDQUFhLCtCQUFiO0FBQ0E7QUFDSDs7QUFWVzs7QUFzQmhCLElBQU0sUUFBUSxHQUFJO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQWZBO0FBaUJPLElBQU0saUJBQWlCLEdBQUc7QUFDN0IsRUFBQSxJQUFJLEVBQUUsY0FEdUI7QUFFN0IsRUFBQSxVQUFVLEVBQUUsSUFGaUI7QUFHN0IsRUFBQSxRQUFRLEVBQUU7QUFDTixJQUFBLE9BQU8sRUFBRTtBQURILEdBSG1CO0FBTTdCLEVBQUEsUUFBUSxFQUFFLFFBTm1CO0FBTzdCLEVBQUEsVUFBVSxFQUFFO0FBUGlCLENBQTFCOzs7Ozs7Ozs7OztBQ3ZDTjs7QUFFTSxJQUFNLGdCQUFnQixHQUFHLE9BQU8sQ0FDbEMsTUFEMkIsQ0FDcEIsaUJBRG9CLEVBQ0QsRUFEQyxFQUUzQixTQUYyQixDQUVqQiw2QkFBa0IsSUFGRCxFQUVPLDRCQUZQLEVBRTBCLElBRm5EIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwi77u/aW1wb3J0IHsgQ29tcG9uZW50c01vZHVsZSB9IGZyb20gJy4vbW9kdWxlLmpzJztcclxuXHJcbmFuZ3VsYXIubW9kdWxlKCdkZW1vJywgW1xyXG4gICAgQ29tcG9uZW50c01vZHVsZVxyXG5dKTtcclxuXHJcbmFuZ3VsYXIubW9kdWxlKCd1bWJyYWNvJykucmVxdWlyZXMucHVzaCgnZGVtbycpOyIsIu+7v2NsYXNzIENvbW1lbnRzIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMubGltaXQgPSAyNTA7XHJcblxyXG4gICAgICAgIHRoaXMubWF4TGVuZ3RoU3RyID0gYG1heCBsZW5ndGg6ICR7dGhpcy5saW1pdH1gO1xyXG4gICAgICAgIHRoaXMucmVtYWluaW5nU3RyID0gJ3JlbWFpbmluZyBjaGFyYWN0ZXJzOiAlMCUnO1xyXG4gICAgICAgIHRoaXMubGFiZWxUZXh0ID0gJ0NvbW1lbnQnO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhgSSdtIHRoZSBjdG9yIGluIHRoZSBjb21wb25lbnRgKTtcclxuICAgICAgICBkZWJ1Z2dlcjtcclxuICAgIH1cclxuXHJcbiAgICBsaW1pdENoYXJzID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLmNvbW1lbnQubGVuZ3RoID4gdGhpcy5saW1pdCkge1xyXG4gICAgICAgICAgICB0aGlzLmluZm8gPSB0aGlzLm1heExlbmd0aFN0cjtcclxuICAgICAgICAgICAgdGhpcy5jb21tZW50ID0gdGhpcy5jb21tZW50LnN1YnN0cigwLCB0aGlzLmxpbWl0KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmluZm8gPSB0aGlzLnJlbWFpbmluZ1N0ci5yZXBsYWNlKCclMCUnLCB0aGlzLmxpbWl0IC0gdGhpcy5jb21tZW50Lmxlbmd0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5cclxuY29uc3QgdGVtcGxhdGUgPSBgXHJcbiAgICA8ZGl2IGNsYXNzPVwidW1iLWVsLXdyYXBcIj5cclxuICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb250cm9sLWxhYmVsXCI+XHJcbiAgICAgICAgICAgIHt7ICRjdHJsLmxhYmVsVGV4dCB9fVxyXG4gICAgICAgICAgICA8c21hbGwgbmctYmluZD1cIiRjdHJsLmluZm9cIj48L3NtYWxsPlxyXG4gICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2xzXCI+XHJcbiAgICAgICAgICAgIDx0ZXh0YXJlYSBcclxuICAgICAgICAgICAgICAgIG5nLW1vZGVsPVwiJGN0cmwuY29tbWVudFwiIFxyXG4gICAgICAgICAgICAgICAgbmctY2hhbmdlPVwiJGN0cmwubGltaXRDaGFycygpXCJcclxuICAgICAgICAgICAgICAgIG5vLWRpcnR5LWNoZWNrXHJcbiAgICAgICAgICAgICAgICB1bWItYXV0by1mb2N1c1xyXG4gICAgICAgICAgICAgICAgcm93cz1cIjVcIiAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJ1bWItcHJvcGVydHktZWRpdG9yIHVtYi10ZXh0YXJlYVwiPjwvdGV4dGFyZWE+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbW1lbnRzQ29tcG9uZW50ID0ge1xyXG4gICAgbmFtZTogJ2RlbW9Db21tZW50cycsXHJcbiAgICB0cmFuc2NsdWRlOiB0cnVlLFxyXG4gICAgYmluZGluZ3M6IHtcclxuICAgICAgICBjb21tZW50OiAnPScsXHJcbiAgICB9LFxyXG4gICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxyXG4gICAgY29udHJvbGxlcjogQ29tbWVudHNcclxufTsiLCLvu79pbXBvcnQgeyBDb21tZW50c0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50LmpzJztcclxuXHJcbmV4cG9ydCBjb25zdCBDb21wb25lbnRzTW9kdWxlID0gYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnZGVtby5jb21wb25lbnRzJywgW10pXHJcbiAgICAuY29tcG9uZW50KENvbW1lbnRzQ29tcG9uZW50Lm5hbWUsIENvbW1lbnRzQ29tcG9uZW50KS5uYW1lOyJdfQ=="}